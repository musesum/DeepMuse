sky {  // visual music program\n main {  // main controls\n frame (701)  // frame counter\n  fps (1..60 = 3541)  // frames per second\n  run (0)  // currently running\n  }  \n pipeline {  // default metal pipeline at atartup\n draws \"draw\"  // drawing layer\n  ave \"compute\"  // compute layer\n  color \"color\"  // colorizing layer\n  render \"render\"  // render layer al\n  }  \n dock {  // list of panel items to put in dock\n camera  fade  ave (1)  melt  tunl  zha  slide  fred  brush  color  scroll  tile  speed  record  }  \n color {  // false color mapping palette\n pal0 \"roygbik\"  // palette 0: (r)ed (o)range (y)ellow ...\n  pal1 \"wKZ\"  // palette 1: (w)hite blac(K) fractali(Z)e\n  xfade (0..1 = 0)  // cross fade between pal0 and pal1\n  }  \n input {  // phone and tablet pencil input\n\n azimuth   // pen tilt\n\n  accel  {  // accelerometer\n\n // use accel\n on (0..1)  }  radius (1..92 = 9)  // finger silhouette\n  tilt (0..1)  // use tilt\n  force (0..0.5)  // pen pressure\n  >> sky.draw.brush.size }  \n draw {  // draw on metal layer\n screen {  // fill 32 bit universe\n fillZero (0)  // all zeros 0x00000000\n  fillOne (0)  // all ones 0xFFFFFFFF\n  }  \n brush {  // type of brush and range\n type \"dot\"  // draw a circle\n  size (1..64 = 1)  // range of radius\n  press (0..1 = 0)  // pressure changes size\n  index (1..255 = 127)  // index in 256 color palette\n // <<(osc.tuio.z osc.manos˚z) // redirect from OSC\n  }  \n line {  // place holder for line drawing\n prev   // staring point of segment\n  next   // endint point of segment\n  }  \n scroll { offset   shift   }  }  \n shader { \n _compute { type \"compute\"  file \"*.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n melt { type \"compute\"  file \"cell.melt.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n fred { type \"compute\"  file \"cell.fred.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n gas { type \"compute\"  file \"cell.gas.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n ave { type \"compute\"  file \"cell.ave.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n mod { type \"compute\"  file \"cell.mod.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n fade { type \"compute\"  file \"cell.fade.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n slide { type \"compute\"  file \"cell.slide.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n drift { type \"compute\"  file \"cell.drift.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n tunl { type \"compute\"  file \"cell.tunl.metal\"  on (0..1)  buffer { version (0..1)  }  }  \n zha { type \"compute\"  file \"cell.zha.metal\"  on (0..1)  \n buffer { version (0..1)  bits (2..4 = 3)  }  repeat (11)  }  \n record { type \"record\"  file \"record.metal\"  on (0..1)  buffer { version (0..1)  }  flip (0..1)  }  \n camera { type \"camera\"  file \"cell.camera.metal\"  on (0..1)  buffer { version (0..1)  }  flip (0..1)  }  \n camix { type \"camix\"  file \"cell.camix.metal\"  on (0..1)  buffer { version (0..1)  }  flip (0..1)  }  \n draws { type \"draw\"  file \"pipe.draws.metal\"  on (0..1)  buffer { scroll   }  }  \n color { type \"color\"  file \"pipe.color.metal\"  buffer { bitplane (0..1)  }  }  \n render { type \"render\"  file \"pipe.render.metal\"  \n buffer { clip   repeat   mirror   }  }  }  }  midi  \n panel { \n _cell { \n base { type \"cell\"  title \"_cell\"  frame   icon \"icon.ring.white.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n ruleOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.ring.white.png\"  value (0..1)  >> panel.cell˚ruleOn.value(0) lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 1)  user  >> ruleOn.value(1) }  \n lock { type \"switch\"  title \"Lock\"  frame   \n icon { off \"icon.lock.closed.png\"  on \"icon.lock.open.png\"  }  value (0..1)  lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n fillZero {  // 00ffffde\n type \"trigger\"  title \"Fill Zeros\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillZero }  \n fillOne {  // ffffffde\n type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  \n _camera { \n base { type \"cell\"  title \"_cell\"  // name\n  frame   icon \"icon.ring.white.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n cameraOne { type \"panelon\"  title \"Camera Cell\"  frame   icon \"icon.camera.png\"  value (0..1)  lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 0.5)  user  >> ruleOn.value(1) }  \n cameraTwo { type \"panelon\"  title \"Camera Mix\"  frame   icon \"icon.camera.flip.png\"  value (0..1)  lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  }  \n facing { type \"switch\"  title \"Lock\"  frame   icon \"icon.camera.flip.png\"  value (0..1)  >> sky.shader.camera.flip lag (0)  }  }  }  \n cell { \n fade { \n base { type \"cell\"  title \"Fade\"  frame   icon \"icon.cell.fade.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n ruleOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.cell.fade.png\"  value (0..1)  >> panel.cell˚ruleOn.value(0)  >> sky.shader.fade.on lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 0.5)  >> sky.shader.fade.buffer.version user  >> ruleOn.value(1) }  \n lock { type \"switch\"  title \"Lock\"  frame   \n icon { off \"icon.lock.closed.png\"  on \"icon.lock.open.png\"  }  value (0..1)  lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1 = 0.2)  >> sky.shader.color.buffer.bitplane }  \n fillZero {  // 00ffffde\n type \"trigger\"  title \"Fill Zeros\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillZero }  \n fillOne {  // ffffffde\n type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  \n ave { \n base { type \"cell\"  title \"Average\"  frame   icon \"icon.cell.ave.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n ruleOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.cell.ave.png\"  value (0..1)  >> panel.cell˚ruleOn.value(0)  >> sky.shader.ave.on lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 0.4)  >> sky.shader.ave.buffer.version user  >> ruleOn.value(1) }  \n lock { type \"switch\"  title \"Lock\"  frame   \n icon { off \"icon.lock.closed.png\"  on \"icon.lock.open.png\"  }  value (0..1)  lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n fillZero {  // 00ffffde\n type \"trigger\"  title \"Fill Zeros\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillZero }  \n fillOne {  // ffffffde\n type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  \n melt { \n base { type \"cell\"  title \"Melt\"  frame   icon \"icon.cell.melt.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n ruleOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.cell.melt.png\"  value (0..1)  >> panel.cell˚ruleOn.value(0)  >> sky.shader.melt.on lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 1)  >> sky.shader.melt.buffer.version user  >> ruleOn.value(1) }  \n lock { type \"switch\"  title \"Lock\"  frame   \n icon { off \"icon.lock.closed.png\"  on \"icon.lock.open.png\"  }  value (0..1)  lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n fillZero {  // 00ffffde\n type \"trigger\"  title \"Fill Zeros\"  frame   icon \"icon.drop.gray.png\"  value (1.67772e+07)  >> sky.draw.screen.fillZero }  \n fillOne {  // ffffffde\n type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (1.67772e+07)  >> sky.draw.screen.fillOne }  }  }  \n tunl { \n base { type \"cell\"  title \"Time Tunnel\"  frame   icon \"icon.cell.tunl.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n ruleOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.cell.tunl.png\"  value (0..1)  >> panel.cell˚ruleOn.value(0)  >> sky.shader.tunl.on lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 1)  >> sky.shader.tunl.buffer.version user  >> ruleOn.value(1) }  \n lock { type \"switch\"  title \"Lock\"  frame   \n icon { off \"icon.lock.closed.png\"  on \"icon.lock.open.png\"  }  value (0..1)  lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n fillZero {  // 00ffffde\n type \"trigger\"  title \"Fill Zeros\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillZero }  \n fillOne {  // ffffffde\n type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  \n zha { \n base { type \"cell\"  title \"Zhabatinski\"  frame   icon \"icon.cell.zha.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n ruleOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.cell.zha.png\"  value (0..1)  >> panel.cell˚ruleOn.value(0)  >> sky.shader.zha.on lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 0.75)  >> sky.shader.zha.buffer.version user  >> ruleOn.value(1) }  \n lock { type \"switch\"  title \"Lock\"  frame   \n icon { off \"icon.lock.closed.png\"  on \"icon.lock.open.png\"  }  value (0..1)  lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n fillZero {  // 00ffffde\n type \"trigger\"  title \"Fill Zeros\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillZero }  \n fillOne {  // ffffffde\n type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  \n slide { \n base { type \"cell\"  title \"Slide Bit Planes\"  frame   icon \"icon.cell.slide.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n ruleOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.cell.slide.png\"  value (0..1)  >> panel.cell˚ruleOn.value(0)  >> sky.shader.slide.on lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 1)  >> sky.shader.slide.buffer.version user  >> ruleOn.value(1) }  \n lock { type \"switch\"  title \"Lock\"  frame   \n icon { off \"icon.lock.closed.png\"  on \"icon.lock.open.png\"  }  value (0..1)  lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n fillZero {  // 00ffffde\n type \"trigger\"  title \"Fill Zeros\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillZero }  \n fillOne {  // ffffffde\n type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  \n fred { \n base { type \"cell\"  title \"Fredkin\"  frame   icon \"icon.cell.fred.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n ruleOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.cell.fred.png\"  value (0..1)  >> panel.cell˚ruleOn.value(0)  >> sky.shader.fred.on lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 0.5)  >> sky.shader.fred.buffer.version user  >> ruleOn.value(1) }  \n lock { type \"switch\"  title \"Lock\"  frame   \n icon { off \"icon.lock.closed.png\"  on \"icon.lock.open.png\"  }  value (0..1)  lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n fillZero {  // 00ffffde\n type \"trigger\"  title \"Fill Zeros\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillZero }  \n fillOne {  // ffffffde\n type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  \n brush { \n base { type \"brush\"  title \"Brush\"  frame   icon \"icon.cell.brush.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n brushSize { type \"slider\"  title \"Size\"  frame   value (0..1)  <> sky.draw.brush.size user  >> brushPress.value(0) }  \n brushPress { type \"switch\"  title \"Pressure\"  frame   icon \"icon.pen.press.png\"  value (0..1)  <> sky.draw.brush.press }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n fillOne { type \"trigger\"  title \"clear 0xFFFF\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  \n scroll { \n base { type \"cell\"  title \"Scroll\"  frame   icon \"icon.scroll.png\"  }  \n controls { \n scrollOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.scroll.png\"  value (0..1 = 0)  lag (0)  user  >> (scrollBox.value brushTilt.value(0)) }  \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n scrollBox { type \"box\"  title \"Screen Scroll\"  frame   radius (10)  tap2   lag (0)  value   <> sky.input.azimuth  >> sky.shader.draws.buffer.scroll user  >> (brushTilt.value(0) accelTilt.value(0) scrollOn.value(1)) }  \n brushTilt { type \"switch\"  title \"Brush Tilt\"  frame   icon \"icon.pen.tilt.png\"  value (0..1)  <> sky.input.tilt  >> accelTilt.value(0) }  \n fillZero { type \"trigger\"  title \"Fill Zero\"  frame   icon \"icon.drop.clear.png\"  value (0..1)  >> sky.draw.screen.fillZero }  }  }  \n camera { \n base { type \"camera\"  title \"Camera\"  // name\n  frame   icon \"icon.camera.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n cameraOne { type \"panelon\"  title \"Camera Cell\"  frame   icon \"icon.camera.png\"  value (0..1)  >> sky.shader.camera.on lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 0.5)  >> sky.shader.camix.buffer.version user  >> ruleOn.value(1) }  \n cameraTwo { type \"panelon\"  title \"Camera Mix\"  frame   icon \"icon.camera.flip.png\"  value (0..1)  >> sky.shader.camix.on lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n facing { type \"switch\"  title \"Lock\"  frame   icon \"icon.camera.flip.png\"  value (0..1)  >> sky.shader.camera.flip lag (0)  }  }  }  \n speed { restart  >> (speedOn(1) controls.speed.value(60)) \n base { type \"cell\"  title \"Speed\"  // name\n  frame   icon \"icon.speed.png\"  }  \n controls { \n speedOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.speed.png\"  value (0..1)  >> sky.main.run user  >> scrollBox.value lag (0)  }  \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n speed { type \"slider\"  title \"Frames per second\"  frame   icon \"icon.pearl.white.png\"  value (1..60 = 3541)  <> sky.main.fps user  >> speedOn.value(1) }  }  }  }  \n shader { \n color { \n base { type \"color\"  title \"Color\"  frame   icon \"icon.pal.main.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n palFade { type \"slider\"  title \"Palette Cross Fade\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  <> sky.color.xfade lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1)  >> sky.shader.color.buffer.bitplane }  \n fillOne { type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  \n tile { \n base { type \"shader\"  title \"Tile\"  frame   icon \"icon.shader.tile.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n tileOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.shader.tile.png\"  value (0..1)  user  >> repeatBox.value lag (0)  }  \n repeatBox { type \"box\"  title \"Repeat\"  frame   radius (10)  tap2   lag (0)  user (0..1 = 1)  >> tileOn.value(1) value   >> sky.shader.render.buffer.repeat }  \n mirrorBox { type \"box\"  title \"Mirror\"  frame   radius (10)  tap2   lag (0)  user (0..1 = 1)  value   >> sky.shader.render.buffer.mirror }  }  }  }  \n record { \n base { type \"record\"  title \"Record\"  frame   icon \"icon.record.png\"  }  \n controls { \n hide { type \"panelx\"  title \"hide\"  frame   icon \"icon.thumb.X.png\"  value (0..1)  }  \n ruleOn { type \"panelon\"  title \"Active\"  frame   icon \"icon.record.png\"  value (0..1)  >> sky.shader.record.on lag (0)  }  \n version { type \"segment\"  title \"Version\"  frame   value (0..1 = 0.5)  >> sky.shader.record.buffer.version user  >> ruleOn.value(1) }  \n lock { type \"switch\"  title \"Lock\"  frame   icon \"icon.camera.flip.png\"  value  >> sky.shader.record.flip lag (0)  }  \n bitplane { type \"slider\"  title \"Bit Plane\"  frame   icon \"icon.pearl.white.png\"  value (0..1 = 0.2)  }  \n fillZero { type \"trigger\"  title \"Fill Zeros\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillZero }  \n fillOne { type \"trigger\"  title \"Fill Ones\"  frame   icon \"icon.drop.gray.png\"  value (0..1)  >> sky.draw.screen.fillOne }  }  }  }  }
